#include <iostream>
#include <iomanip>
#include <string>
#include<limits>
using namespace std;

int main()
{
   /*
   * Step 1
   * Prompt for number of computers along with validation
   * A loop is run those many times and
   * each time user is asked to enter the information of computer
   * like GPU, CPU etc.
   */
   int numComputers = 0;
   int highPerf = 0;       // Variable to store high performance value initialized 0
   int lowPerf = numeric_limits<int>::max();       // Variable to store low performance value initialized to infinity
   do
   {
       cout << "Enter the number of computers you wish to enter information for: ";
       cin >> numComputers;
       if(numComputers < 1)
       {
           cout << "Value should not be less than 1. Please try again.\n";
       }
   } while(numComputers < 1);
  
   /*
   * Step 3
   * Taking input from user for each computer and displaying the same
   * along with performance score
   */
   while(numComputers > 0)
   {
       /*
       * Step 2
       * Title String that will be displyed
       * before prompting the user for information of every computer
       */
       cout << "\n\nComputer Hardware Graphics Quality Recommendation Tool\n\n";
      
       int choice;
       int clkspGPU;
       int clkspCPU;
       int numCores;
      
       /*
       * Step 4
       * Taking input for GPU clock speed along with validation
       */
       do
       {
           cout<<"Enter the clock speed (in Megahertz) of your graphics card (GPU): ";
           cin>>clkspGPU;
           if(clkspGPU < 800 || clkspGPU > 2000)
           {
               cout << "GPU clock speed should lie between 800 (inclusive) and 2000 MHz (inclusive). Please try again.\n";
           }
       } while(clkspGPU < 800 || clkspGPU > 2000);
      
       /*
       * Step 4
       * Taking input for CPU clock speed along with validation
       */
       do
       {
           cout<<"Enter the clock speed (in Megahertz) of your processor (CPU): ";
           cin>>clkspCPU;
           if(clkspCPU < 1000 || clkspCPU > 5500)
           {
               cout << "CPU clock speed should lie between 1000 (inclusive) and 5500 MHz (inclusive). Please try again.\n";
           }
       } while(clkspCPU < 1000 || clkspCPU > 5500);
      
       /*
       * Step 4
       * Taking input for number of cores along with validation
       */
       do
       {
           cout<<"Enter the number of cores that your processor (CPU) has: ";
           cin>>numCores;
           if(numCores < 1 || numCores > 16)
           {
               cout << "Number of cores should lie between 1 (inclusive) and 16 (inclusive). Please try again.\n";
           }
       } while(numCores < 1 || numCores > 16);
      
       const int Low=1,
       Mid=2,
       High=3,
       Highest=4;
       /*
       * Step 4
       * Taking input for resolution along with validation
       */
       do
       {
           cout<<"What is the resolution of your monitor?";
           cout<< " Resolution Menu \n"
           << "1. 1280 x 720 \n"
           << "2. 1920 x 1080 \n"
           << "3. 2560 x 1440 \n"
           << "4. 3840 x 2160 \n"
           << "Enter the number (1-4) that corresponds to your choice.";
           cin>>choice;
           if(choice < 1 || choice > 4)
           {
               cout << "Select a value between 1 (inclusive) and 4 (inclusive). Please try again.\n";
           }
       } while(choice < 1 || choice > 4);
  
       //mult values
       float multiplier;
      
       if (choice==1)
       {
       multiplier=1;
       }
       else if (choice==2)
       {
       multiplier=0.75;
       }
       else if (choice==3)
       {
       multiplier=0.55;
       }
       else
       {
       multiplier=0.35;
       }
  
       //Calculate Performance Score
       //Performance Score = ((5 * GPU Clock Speed) + (Number of Cores * CPU Clock Speed)) * Multiplier
      
       int Perf_Score;
      
       Perf_Score=((5*clkspGPU)+(numCores*clkspCPU))*multiplier;
      
       if (Perf_Score>17000)
       {
           cout<<"Recommended Quality is Ultra\n\n";
       }
       else if (Perf_Score>=15000 && Perf_Score<=17000)
       {
           cout<<"Recommended Quality is High\n\n";
       }
       else if (Perf_Score>=13000 && Perf_Score<15000)
       {
           cout<<"Recommended Quality is Medium\n\n";
       }
       else if (Perf_Score>=11000 && Perf_Score<13000)
       {
           cout<<"Recommended Quality is Low \n\n";
       }
       else
       {
           cout<<"Unable to Play\n\n";
       }
      
       /*
       * Updating the highest and lowest performance variables
       */
       if(Perf_Score > highPerf) highPerf = Perf_Score;
       if(Perf_Score < lowPerf) lowPerf = Perf_Score;
  

       cout<<"Computer Hardware Graphics Quality Tool \n\n";
       cout<<"GPU clock speed:"<<clkspGPU<<endl;
       cout<<"CPU clock speed:"<<clkspCPU<<endl;
       cout<<"Number of cores:"<<numCores<<endl;

       string reso;
      
       if (choice==1)
       {
           reso="1280 x 720";
       }
       else if (choice==2)
       {
           reso="1920 x 1080";
       }
       else if (choice==3)
       {
           reso="2560 x 1440";
       }
       else if (choice==4)
       {
           reso="3840 x 2160";
       }
       else
       {
           cout<<"Error in entry\n";
       }
  
       cout<<"Monitor Resolution:"<<reso<<endl;
       cout<<"Performance Score:"<<Perf_Score<<endl;
      
       numComputers--;
   }
  
   /*
   * Displaying the highest and lowest performance score
   */
   cout << endl;
   cout << "Highest Performance Score = " << highPerf << endl;
   cout << "Lowest Performance Score = " << lowPerf << endl;
  
   return 0;
}
